name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - renovate/*
      - renovate/*

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: npm i -g --force corepack && corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🚧 Set up project
        run: pnpm dev:prepare

      - name: 🔠 Lint project
        run: pnpm lint

      - name: ✂️ Knip project
        run: pnpm knip

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - run: npm i -g --force corepack && corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install

      # https://github.com/vitejs/vite/blob/main/.github/workflows/ci.yml#L62
      # Install playwright's binary under custom directory to cache
      - name: Set Playwright path (non-windows)
        if: runner.os != 'Windows'
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/playwright-bin" >> $GITHUB_ENV
      - name: Set Playwright path (windows)
        if: runner.os == 'Windows'
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME\.cache\playwright-bin" >> $env:GITHUB_ENV

      - name: Cache Playwright's binary
        uses: actions/cache@v4
        with:
          # Playwright removes unused browsers automatically
          # So does not need to add playwright version to key
          key: ${{ runner.os }}-playwright-bin-v1
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

      - name: Install Playwright
        # does not need to explicitly set chromium after https://github.com/microsoft/playwright/issues/14862 is solved
        run: pnpm playwright install chromium

      - name: 🚧 Set up project
        run: pnpm dev:prepare

      - name: 🧪 Test project
        run: pnpm test

      - name: 💪 Test types
        run: pnpm test:types

      - name: 🛠 Build project
        run: pnpm build

      - name: 🟩 Coverage
        if: matrix.os != 'windows-latest'
        uses: codecov/codecov-action@v5
